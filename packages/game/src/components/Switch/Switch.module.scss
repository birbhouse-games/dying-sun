@property --ds-c--switch--color--on {
  syntax: '<color>';
  inherits: true;
  initial-value: green;
}

@property --ds-c--switch--color--off {
  syntax: '<color>';
  inherits: true;
  initial-value: #c96969;
}

:root {
	--ds-c--switch--size: calc(5px * var(--ds--global--ui-scale));
}

.container {
	align-items: center;
	display: flex;
	filter: brightness(1);
	font-family: 'Micro Chat';
	font-size: var(--ds--global--font-size--medium);
	gap: calc(4px * var(--ds--global--ui-scale));
	justify-content: flex-end;
	margin: calc(4px * var(--ds--global--ui-scale)) 0;
	transition-duration: 0.2s;
	transition-property:
		--ds-c--switch--color--on,
		--ds-c--switch--color--off;
	width: 100%;

	.input {
		-webkit-appearance: none;
		appearance: none;
		background-color: grey;
		background-image:
			linear-gradient(
				to right,
				var(--ds-c--switch--color--on) var(--ds-c--switch--size),
				white var(--ds-c--switch--size),
				white calc(var(--ds-c--switch--size) * 2),
				var(--ds-c--switch--color--off) calc(var(--ds-c--switch--size) * 2)
			);
		background-position: calc(var(--ds-c--switch--size) * -1);
		background-size:
			calc(var(--ds-c--switch--size) * 3)
			var(--ds-c--switch--size);
		border: 0;
		cursor: pointer;
		height: var(--ds-c--switch--size);
		margin: 0;
		transition-duration: 0.2s;
		transition-property: background-position;
		width: calc(var(--ds-c--switch--size) * 2);

		&:checked {
			background-position: 0;
		}
	}

	&.is-disabled {
		--ds-c--switch--color--on: grey;
		--ds-c--switch--color--off: grey;
	}
}
